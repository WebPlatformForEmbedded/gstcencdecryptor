@startuml decryptor
skinparam maxMessageSize 100
skinparam wrapMessageWidth 100

package CENC <<Rectangle>> {

interface IGstDecryptor{
    
    {abstract} + Initialize(std::unique_ptr<IExchangeFactory>, \n\
                    const std::string& keysystem, \n\
                    const std::string& origin, \n\
                    BufferView& initData) : gboolean
    {abstract} + Decrypt(std::shared_ptr<EncryptedBuffer>) : GstFlowReturn
}

package CencDecrypt_element <<Rectangle>> {
    class GstCencDecrypt{
        + parent : GstBaseTransform*
        + decryptor : IDecryptor*
    }

    class GstCencDecryptClass {
        + baseClass : GstBaseTransformClass*
    }
}

class Decryptor{
    + Initialize(std::unique_ptr<IExchangeFactory>, \n\
                    const std::string& keysystem, \n\
                    const std::string& origin, \n\
                    BufferView& initData) : gboolean
    + Decrypt(std::shared_ptr<EncryptedBuffer>) : GstFlowReturn
    ---
    - _system    : OpenCDMSystem*
    - _session   : OpenCDMSession*
    - _exchanger : std::unique_ptr<IExchange>
    - _factory   : std::unique_ptr<IExchangeFactory>
    - callbacks  : OpenCDMSessionCallbacks
}

interface IExchange{
    {abstract} + Submit(Core::ProxyType<Web::Request>, \n\
                Core::ProxyType<IExchange::ICallback>, \n\
                uint32_t waitTime)
    {abstract} + Revoke(IExchange::ICallback*)
}

interface IExchange::ICallback {
    + Response(Core::ProxyType<Web::Request>, Core::ProxyType<Web::Response>)
}

class Exchanger{
    + Submit(Core::ProxyType<Web::Request>, \n\
                Core::ProxyType<IExchange::ICallback>, \n\
                uint32_t waitTime)
    + Revoke(IExchange::ICallback*)
}

class OCMDResponseCallback{
    + Response(Core::ProxyType<Web::Request>, Core::ProxyType<Web::Response>)
}

class Exchanger::Overwatch
note bottom : Dispatch job used \n for executing the request.

class Exchanger::Challenger
note bottom : Utility class used for sending \n request and retrieving responses.


GstCencDecrypt *-- IGstDecryptor
IGstDecryptor <|-- Decryptor
IExchange <|-- Exchanger
Decryptor *-- IExchange
IExchange::ICallback <-- OCMDResponseCallback
IExchange::ICallback -[hidden]> IExchange
Exchanger::Challenger -[hidden]> Exchanger::Overwatch
Exchanger --[hidden]> Exchanger::Overwatch
IExchange -[hidden]> GstCencDecryptClass

@enduml

